{"version":3,"file":"bh-lib.js.map","sources":["ng://bh-lib/lib/bh-common/bh-logger.service.ts","ng://bh-lib/lib/bh-canvas/bh-canvas-rect.service.ts","ng://bh-lib/lib/bh-common/bh-format.service.ts","ng://bh-lib/lib/bh-common/bh-model.ts","ng://bh-lib/lib/bh-form/bh-form.service.ts","ng://bh-lib/lib/bh-http/bh-http.service.ts","ng://bh-lib/lib/bh-native/user-camera/user-camera.component.ts","ng://bh-lib/lib/bh-native/bh-native.module.ts","ng://bh-lib/lib/bh-native/bh-localstorage.service.ts"],"sourcesContent":["/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BhLogger {\r\n\r\n  constructor() { }\r\n\r\n  public toLogText(logType: string, logMsg: string, logContext?: {[key: string]: any}, logModule?: string, logFunc?: string) {\r\n    var LogText: Array<string> = [];\r\n      \r\n    LogText.push(`[${logType}]`);\r\n\r\n    if (logModule) {\r\n      if (logFunc) {\r\n        LogText.push(`[${logModule}::${logFunc}]`);\r\n      } else {\r\n        LogText.push(`[${logModule}]`);\r\n      }\r\n    }\r\n\r\n    LogText.push(` ${logMsg}`);\r\n\r\n    if (logContext) {\r\n      for (let k in logContext) {\r\n        if (logContext[k] && logContext[k] instanceof Error) {\r\n          logContext[k] = logContext[k].message;\r\n        }\r\n      }\r\n      \r\n      LogText.push(` [context: ${JSON.stringify(logContext)}]`);\r\n    }\r\n\r\n    return LogText.join('');\r\n  }\r\n\r\n  public log(logMsg: string, logContext?: object, logModule?: string, logFunc?: string): void {\r\n    console.log(this.toLogText('LOG', logMsg, logContext, logModule, logFunc));\r\n  }\r\n\r\n  public debug(logMsg: string, logContext?: object, logModule?: string, logFunc?: string): void {\r\n    console.trace(this.toLogText('DEBUG', logMsg, logContext, logModule, logFunc));\r\n  }\r\n\r\n  public info(logMsg: string, logContext?: object, logModule?: string, logFunc?: string): void {\r\n    console.info(this.toLogText('INFO', logMsg, logContext, logModule, logFunc));\r\n  }\r\n\r\n  public warn(logMsg: string, logContext?: object, logModule?: string, logFunc?: string): void {\r\n    console.warn(this.toLogText('WARN', logMsg, logContext, logModule, logFunc));\r\n  }\r\n\r\n  public error(logMsg: string, logContext?: object, logModule?: string, logFunc?: string): void {\r\n    console.error(this.toLogText('ERROR', logMsg, logContext, logModule, logFunc));\r\n  }\r\n  \r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BhLogger } from '../bh-common/bh-logger.service';\r\nimport { BhCanvasRect, BhCanvasRectPoint } from './bh-canvas-rect.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BhCanvasRectService {\r\n\r\n  constructor(private bhLogger: BhLogger) { }\r\n\r\n  public rectToRectPoint(input: BhCanvasRect): BhCanvasRectPoint {\r\n    if (!input) {\r\n      this.bhLogger.warn(`Rect is empty.`, null, 'BhCanvasRectService', 'rectToRectPoint');\r\n      return null;\r\n    }\r\n\r\n    let rectPoint: BhCanvasRectPoint = {\r\n      leftBottom: {\r\n        x: input.x,\r\n        y: input.y + input.height\r\n      },\r\n      rightTop: {\r\n        x: input.x + input.width,\r\n        y: input.y\r\n      }\r\n    };\r\n\r\n    return rectPoint;\r\n  }\r\n\r\n  public rectPointToRect(input: BhCanvasRectPoint): BhCanvasRect {\r\n    if (!input) {\r\n      this.bhLogger.warn(`Rect Point is empty.`, null, 'BhCanvasRectService', 'rectPointToRect');\r\n      return null;\r\n    }\r\n\r\n    let BhCanvasRect: BhCanvasRect = {\r\n      x: input.leftBottom.x,\r\n      y: input.rightTop.y,\r\n      width: input.rightTop.x - input.leftBottom.x,\r\n      height: input.leftBottom.y - input.rightTop.y\r\n    };\r\n\r\n    return BhCanvasRect;\r\n  }\r\n\r\n  public getCoverageRect(mainRect: BhCanvasRect, subRect: BhCanvasRect): BhCanvasRect {\r\n    let mainRectPoint: BhCanvasRectPoint = this.rectToRectPoint(mainRect);\r\n    let subRectPoint: BhCanvasRectPoint = this.rectToRectPoint(subRect);\r\n    \r\n    var coverageRectPoint: BhCanvasRectPoint = {\r\n      leftBottom: {\r\n        x: Math.max(mainRectPoint.leftBottom.x, subRectPoint.leftBottom.x),\r\n        y: Math.min(mainRectPoint.leftBottom.y, subRectPoint.leftBottom.y)\r\n      },\r\n      rightTop: {\r\n        x: Math.min(mainRectPoint.rightTop.x, subRectPoint.rightTop.x),\r\n        y: Math.max(mainRectPoint.rightTop.y, subRectPoint.rightTop.y)\r\n      }\r\n    };\r\n    \r\n    if (coverageRectPoint.leftBottom.x > coverageRectPoint.rightTop.x) {\r\n      return null;\r\n    } else if (coverageRectPoint.rightTop.y > coverageRectPoint.leftBottom.y) {\r\n      return null;\r\n    } else {\r\n      return this.rectPointToRect(coverageRectPoint);\r\n    }\r\n  }\r\n\r\n  public getPercentageOfCoverageByCoverageRect(mainRect: BhCanvasRect, coverageRect: BhCanvasRect): number {\r\n    if (!coverageRect) {\r\n      return 0;\r\n    }\r\n    \r\n    return Math.ceil((coverageRect.width * coverageRect.height) / (mainRect.width * mainRect.height) * 100);\r\n  }\r\n\r\n  public getPercentageOfCoverage(mainRect: BhCanvasRect, subRect: BhCanvasRect): number {\r\n    let coverageRect: BhCanvasRect = this.getCoverageRect(mainRect, subRect);\r\n    \r\n    if (!coverageRect) {\r\n      return 0;\r\n    }\r\n    \r\n    return this.getPercentageOfCoverageByCoverageRect(mainRect, coverageRect);\r\n  }\r\n\r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BhFormatService {\r\n\r\n  constructor() { }\r\n\r\n  public toString(input: any, defaultValue?: string): string {\r\n    if (typeof input === 'boolean') {\r\n      return input.toString();\r\n    }\r\n\r\n    return input ? input.toString() : (defaultValue ? defaultValue : '');\r\n  }\r\n\r\n  public toNumber(input: any, defaultValue?: number): number {\r\n    if (typeof input === 'string' && !/^[0-9\\-\\.]*$/g.test(input)) {\r\n      return (defaultValue ? defaultValue : 0);\r\n    }\r\n\r\n    if (Array.isArray(input)) {\r\n      return (defaultValue ? defaultValue : 0);\r\n    }\r\n\r\n    input = parseInt(input, 10);\r\n\r\n    if (isNaN(input)) {\r\n      return (defaultValue ? defaultValue : 0);\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  public toFloat(input: any, defaultValue?: number): number {\r\n    if (typeof input === 'string' && !/^[0-9\\-\\.]*$/g.test(input)) {\r\n      return (defaultValue ? defaultValue : 0);\r\n    }\r\n\r\n    if (Array.isArray(input)) {\r\n      return (defaultValue ? defaultValue : 0);\r\n    }\r\n\r\n    input = parseFloat(input);\r\n\r\n    if (isNaN(input)) {\r\n      return (defaultValue ? defaultValue : 0);\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  public toBoolean(input: any, defaultValue?: boolean): boolean {\r\n    if (typeof input === 'string') {\r\n      if (input === 'true') {\r\n        return true;\r\n      } else if (input === 'false') {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (typeof input !== 'boolean') {\r\n      return (defaultValue ? defaultValue : false);\r\n    }\r\n\r\n    return input ? true : false;\r\n  }\r\n\r\n  public toArrayChunk(input: Array<any>, chunkSize: number): Array<Array<any>> {\r\n    if (!input || input.length <= 0) {\r\n      return [[]];\r\n    }\r\n\r\n    chunkSize = this.toNumber(chunkSize);\r\n\r\n    if (chunkSize <= 0) {\r\n      return [input];\r\n    }\r\n\r\n    let results = [];\r\n    let inputClone: Array<any> = input.slice(0);\r\n    \r\n    while (inputClone.length) {\r\n      results.push(inputClone.splice(0, chunkSize));\r\n    }\r\n    \r\n    return results;\r\n  }\r\n\r\n  public tsToDate(input: any): Date {\r\n    input = this.toNumber(input);\r\n    return new Date(input * 1000);\r\n  }\r\n\r\n  public dateToTs(input: Date): number {\r\n    if (!input) {\r\n      input = new Date();\r\n    }\r\n\r\n    return Math.floor(input.getTime() / 1000);\r\n  }\r\n\r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport abstract class BhModel<T> {\r\n  protected model: T;\r\n\r\n  public get(): T {\r\n    if (this.model) {\r\n      return this.model;\r\n    } else {\r\n      return this.getDefault();\r\n    }\r\n  }\r\n\r\n  abstract getDefault(): T;\r\n\r\n  public set(input: T): void {\r\n    this.model = input;\r\n  }\r\n\r\n  abstract save(): Observable<void>;\r\n\r\n  abstract sync(): Observable<void>;\r\n\r\n  abstract clear(): Observable<void>;\r\n\r\n  public hasModel(): boolean {\r\n    return this.model ? true : false;\r\n  }\r\n\r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BhFromSelectOption } from './bh-form.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BhFormService {\r\n\r\n  constructor() { }\r\n\r\n  getOptionFromValue(options: Array<BhFromSelectOption>, value: string | number | boolean): BhFromSelectOption {\r\n    for (let option of options) {\r\n      if (option.value === value) {\r\n        return option;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\nimport { BhFormatService } from '../bh-common/bh-format.service';\r\nimport { BhHttpParams } from './bh-http.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BhHttpService {\r\n\r\n  constructor(\r\n    private bhFormatService: BhFormatService\r\n  ) { }\r\n\r\n  public paramsToQueryString(params: BhHttpParams): string {\r\n    let queryStringArray: Array<string> = [];\r\n\r\n    for (let k in params) {\r\n      let value: string = this.bhFormatService.toString(params[k]);\r\n\r\n      if (value) {\r\n        value = encodeURIComponent(value.toString());\r\n      } else {\r\n        value = '';\r\n      }\r\n\r\n      queryStringArray.push(`${k}=${value}`);\r\n    }\r\n\r\n    return queryStringArray.join('&');\r\n  }\r\n\r\n  public paramsToHttpParams(params: BhHttpParams): HttpParams {\r\n    let httpParams: HttpParams = new HttpParams();\r\n\r\n    for (let k in params) {\r\n      httpParams = httpParams.set(k, this.bhFormatService.toString(params[k]));\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Component, AfterViewInit, ViewChild, Input, Output, ElementRef, EventEmitter } from '@angular/core';\r\n\r\nimport { BhLogger } from '../../bh-common/bh-logger.service';\r\n\r\n@Component({\r\n  selector: 'bh-user-camera',\r\n  templateUrl: './user-camera.component.html',\r\n  styleUrls: ['./user-camera.component.css']\r\n})\r\nexport class UserCameraComponent implements AfterViewInit {\r\n\r\n  @ViewChild('userCamera') videoElement: ElementRef;\r\n\r\n  @Input() width: number = 640;\r\n\r\n  @Input() height: number = 480;\r\n\r\n  @Input() deviceId: string;\r\n\r\n  @Input() facingMode: string;\r\n\r\n  @Output() onReady: EventEmitter<HTMLMediaElement> = new EventEmitter();\r\n\r\n  @Output() onError: EventEmitter<any> = new EventEmitter();\r\n\r\n  private video: HTMLMediaElement;\r\n\r\n  constructor(\r\n    public bhLogger: BhLogger\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.video = this.videoElement.nativeElement;\r\n\r\n    if (!this.facingMode || this.facingMode !== 'environment') {\r\n      this.facingMode = 'user';\r\n    }\r\n\r\n    window.navigator.mediaDevices.getUserMedia({\r\n      video: {\r\n        width: {\r\n          exact: this.width\r\n        },\r\n        height: {\r\n          exact: this.height\r\n        },\r\n        deviceId: this.deviceId,\r\n        facingMode: this.facingMode\r\n      },\r\n      audio: false\r\n    }).then((stream: MediaStream) => {\r\n      this.bhLogger.log(`User camera is ready.`, null, 'UserCameraComponent', 'ngAfterViewInit');\r\n      this.video.srcObject = stream;\r\n      this.onReady.emit(this.video);\r\n    }).catch((error: any) => {\r\n      this.bhLogger.warn(`Unable to get camera stream.`, error, 'UserCameraComponent', 'ngAfterViewInit');\r\n      this.onError.emit(error);\r\n    });\r\n  }\r\n\r\n}\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserCameraComponent } from './user-camera/user-camera.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserCameraComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    UserCameraComponent\r\n  ]\r\n})\r\nexport class BhNativeModule { }\r\n","/*\r\n * Â© CloudChen <cloudchen2015@gmail.com>. All Rights Reserved \r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BhLogger } from '../bh-common/bh-logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BhLocalstorageService {\r\n\r\n  constructor(private bhLogger: BhLogger) {\r\n    if (!window.localStorage) {\r\n      throw new Error(`Unsupported localStorage.`);\r\n    }\r\n  }\r\n\r\n  public set<T>(key: string, value: T): void {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  public get<T>(key: string): T {\r\n    let value: string = window.localStorage.getItem(key);\r\n\r\n    if (value && value != \"undefined\" && value != \"null\") {\r\n      return JSON.parse(value);\r\n    }\r\n\r\n    this.bhLogger.log(`\"${key}\" value not found in storage.`, {key: key}, 'BhLocalstorageService', 'get');\r\n    return null;\r\n  }\r\n\r\n  public remove(key: string) {\r\n    window.localStorage.removeItem(key);\r\n  }\r\n}\r\n"],"names":["tslib_1.__values"],"mappings":"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"}
